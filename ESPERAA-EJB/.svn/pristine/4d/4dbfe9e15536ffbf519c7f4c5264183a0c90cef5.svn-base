package dao;

import java.util.ArrayList;
import java.util.List;

import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import javax.persistence.TypedQuery;

import entities.Investissement;
import entities.Notification;

@Stateless
public class NotificationDAO {
	@PersistenceContext( unitName = "monUnite" )
	private EntityManager em;
	
	@EJB
	private FinanceurDAO financeurDAO;
	
	public void create(Notification obj) throws DAOException {
		try {
            em.persist( obj );
        } catch ( Exception e ) {
            throw new DAOException( e );
        }
	}

	public void delete(Notification obj) throws DAOException {
		try {
            em.remove( em.merge( obj ) );
        } catch ( Exception e ) {
            throw new DAOException( e );
        }
	}

	public Notification findById(int id) throws DAOException {
		try {
            return em.find( Notification.class, id );
        } catch ( Exception e ) {
            throw new DAOException( e );
        }
	}

	public List<Notification> findAll() throws DAOException {
		try {
            TypedQuery<Notification> query = em.createQuery( "SELECT m FROM Notification m ORDER BY m.idNotification", Notification.class );
            return query.getResultList();
        } catch ( Exception e ) {
            throw new DAOException( e );
        }
	}
	
	/**
	 * Recuperer les notifications dont loginFinanceur est le destinataire, et qui n'ont pas encore été consultées
	 * @param loginFinanceur
	 * @return
	 * @throws DAOException
	 */
	public List<Notification> findByFinanceurLogin(String loginFinanceur) throws DAOException{
		try{
			String ejbql = "SELECT n FROM Notification n WHERE n.destinataire=?1 AND n.notificationVue=?2";
			Query query = em.createQuery(ejbql);
			query.setParameter("1", financeurDAO.findByLogin(loginFinanceur));
			query.setParameter("2", false);
			List<Notification> notifList = query.getResultList();
			if(notifList.isEmpty())
				return new ArrayList<Notification>();
			else return notifList;
        } catch ( Exception e ) {
            throw new DAOException( e );
        }
	}
	
}
