package facade;

import java.util.ArrayList;

import javax.ejb.EJB;
import javax.ejb.Stateless;

import dao.AdminDAO;
import dao.CategorieDao;
import dao.DAOException;
import dao.ProjetDAO;
import entities.Categorie;
import entities.Investissement;
import entities.Projet;
import entities.Tranche;

@Stateless
public class AdministrateurFacade implements IAdministrateurFacade{
	private static final String NOTIFICATION_PROJET_CLOTURE = "Un administrateur a cloturé le projet : ";
	private static final String NOTIFICATION_PROJET_CLOTURE_PORTEUR = "Un administrateur a cloturé votre projet : ";

	@EJB
	private CategorieDao categorieDao;
	@EJB
	private AdminDAO adminDao;
	@EJB
	private ProjetDAO projetDao;

	@Override
	public void creerCategorie(String titreCategorie){
		Categorie categorie = new Categorie();
		categorie.setTitreCategorie(titreCategorie);
		categorie.setProjetList(new ArrayList<Projet>());
		try {
			categorieDao.create(categorie);
		} catch (DAOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public boolean verifierCategorie(String nomCategorie){
		try {
			return categorieDao.findByTitre(nomCategorie) != null;
		} catch (DAOException e) {
			e.printStackTrace();
		}
		return false;
	}

	@Override
	public void mettreEnAvant(int idProjet) {
		projetDao.mettreEnAvant(idProjet);
	}

	@Override
	public void mettreEnArriere(int idProjet) {
		projetDao.mettreEnArriere(idProjet);
	}

	@Override
	public void cloturerProjet(int idProjet){
		try {
			Projet projet = projetDao.findById(idProjet);
			int montantARembourser;
			int montantAInvestir;
			for(Tranche tranche : projet.getTrancheList()){
				for(Investissement investissement : tranche.getInvestissementList()){
					montantARembourser = investissement.getSommeInvestie();
					montantAInvestir = investissement.getFinanceur().getMontantAInvestir();
					investissement.getFinanceur().setMontantAInvestir(montantARembourser + montantAInvestir);
					String notificationText = null;

					notificationText = NOTIFICATION_PROJET_CLOTURE 
							+ projet.getTitreProjet();
					investissement.getFinanceur().addNotification(notificationText);
				}
			}
			String notificationText = NOTIFICATION_PROJET_CLOTURE_PORTEUR 
					+ projet.getTitreProjet();
			projet.getPorteur().addNotification(notificationText);

			projetDao.delete(projet);
		} catch (DAOException e) {
			e.printStackTrace();
		}
	}
}
