package dao;

import java.util.List;

import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import javax.persistence.TypedQuery;

import entities.Tag;


@Stateless
public class TagDAO {

	@PersistenceContext( unitName = "monUnite" )
	private EntityManager em;
	
	public void create(Tag obj) throws DAOException {
		try {
            em.persist( obj );
        } catch ( Exception e ) {
            throw new DAOException( e );
        }
	}

	public void delete(Tag obj) throws DAOException {
		try {
            em.remove( em.merge( obj ) );
        } catch ( Exception e ) {
            throw new DAOException( e );
        }
	}

	public Tag findByName(String name) throws DAOException {
		try {
            return em.find( Tag.class, name );
        } catch ( Exception e ) {
            throw new DAOException( e );
        }
	}

	public List<Tag> findAll() throws DAOException {
		try {
            TypedQuery<Tag> query = em.createQuery( "SELECT t FROM Tag t ORDER BY t.tag", Tag.class );
            return query.getResultList();
        } catch ( Exception e ) {
            throw new DAOException( e );
        }
	}
	
	@SuppressWarnings("unchecked")
	public List<String> findAllTags() throws DAOException{
		try {
			Query query = em.createQuery( "SELECT t.tag FROM Tag t ORDER BY t.tag");
            return query.getResultList();
        } catch ( Exception e ) {
            throw new DAOException( e );
        }
	}
}
