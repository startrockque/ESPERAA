package entities;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.OneToMany;

@Entity
public class FinanceurPorteur extends AUtilisateur {

    private int montantAInvestir;

    @OneToMany(mappedBy="financeur", cascade={CascadeType.PERSIST, CascadeType.REMOVE})
    private List<Aime> aimeList;


    /* ************* *
     *  Constructeur 
     * ************* */

    public FinanceurPorteur() {
        super();
        montantAInvestir = 0;
        notificationList = new ArrayList<Notification>();
        aimeList = new ArrayList<Aime>();
    }

    public FinanceurPorteur(String nom, String login, String mdp, String email, String image) {
        super(nom, login, mdp, email, image);
        montantAInvestir = 0;
        notificationList = new ArrayList<Notification>();
        aimeList = new ArrayList<Aime>();
    }

    public void alimenterPortefeuille(int montantACrediter) {
        Integer sommeInteger = this.montantAInvestir + montantACrediter;
        if(sommeInteger < 0)
            sommeInteger = Integer.MAX_VALUE;
        this.montantAInvestir = sommeInteger;
    }

    public void aimerProjet(Projet projet) {
        Aime aime = new Aime();
        aime.setFinanceur( this );
        this.aimeList.add(aime);
        aime.setProjet( projet );
        projet.getAimeList().add(aime);
    }

    /* ***************** *
     *  Getter et Setter *
     * ***************** */

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public int getMontantAInvestir() {
        return montantAInvestir;
    }

    public void setMontantAInvestir(int montantAInvestir) {
        this.montantAInvestir = montantAInvestir;
    }

    public List<Aime> getAimeList() {
        return aimeList;
    }

    public void setAimeList(List<Aime> aimeList) {
        this.aimeList = aimeList;
    }


}